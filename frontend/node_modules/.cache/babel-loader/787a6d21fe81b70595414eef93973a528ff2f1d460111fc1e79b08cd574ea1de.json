{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Add interceptor to include user/guest ID\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  const guestId = localStorage.getItem('guestId');\n  if (user) {\n    config.headers['user-id'] = user.id;\n  } else if (guestId) {\n    config.headers['guest-id'] = guestId;\n  }\n  return config;\n});\nexport const convertFile = async formData => {\n  try {\n    const response = await axios.post(`${API_URL}/convert`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'guest-id': localStorage.getItem('guestId')\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data;\n    console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.details) || error.message);\n  }\n};\nexport const getStats = async () => {\n  const response = await api.get('/stats');\n  return response.data;\n};\nexport const getRecentConversions = async () => {\n  const response = await api.get('/recent-conversions');\n  return response.data;\n};\nexport const downloadConversion = async conversionId => {\n  const response = await api.get(`/download/${conversionId}`, {\n    responseType: 'blob'\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","guestId","headers","id","convertFile","formData","response","post","data","error","_error$response","_error$response2","_error$response2$data","console","message","Error","details","getStats","get","getRecentConversions","downloadConversion","conversionId","responseType"],"sources":["C:/Users/Jordan/file-converter/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL\r\n});\r\n\r\n// Add interceptor to include user/guest ID\r\napi.interceptors.request.use((config) => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const guestId = localStorage.getItem('guestId');\r\n\r\n  if (user) {\r\n    config.headers['user-id'] = user.id;\r\n  } else if (guestId) {\r\n    config.headers['guest-id'] = guestId;\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\nexport const convertFile = async (formData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/convert`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        'guest-id': localStorage.getItem('guestId')\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('API Error:', error.response?.data || error.message);\r\n    throw new Error(error.response?.data?.details || error.message);\r\n  }\r\n};\r\n\r\nexport const getStats = async () => {\r\n  const response = await api.get('/stats');\r\n  return response.data;\r\n};\r\n\r\nexport const getRecentConversions = async () => {\r\n  const response = await api.get('/recent-conversions');\r\n  return response.data;\r\n};\r\n\r\nexport const downloadConversion = async (conversionId) => {\r\n  const response = await api.get(`/download/${conversionId}`, {\r\n    responseType: 'blob'\r\n  });\r\n  return response.data;\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;;AAEF;AACAC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,MAAMC,OAAO,GAAGF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAE/C,IAAIJ,IAAI,EAAE;IACRD,MAAM,CAACO,OAAO,CAAC,SAAS,CAAC,GAAGN,IAAI,CAACO,EAAE;EACrC,CAAC,MAAM,IAAIF,OAAO,EAAE;IAClBN,MAAM,CAACO,OAAO,CAAC,UAAU,CAAC,GAAGD,OAAO;EACtC;EAEA,OAAON,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMS,WAAW,GAAG,MAAOC,QAAQ,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,GAAGnB,OAAO,UAAU,EAAEiB,QAAQ,EAAE;MAChEH,OAAO,EAAE;QACP,cAAc,EAAE,qBAAqB;QACrC,UAAU,EAAEH,YAAY,CAACC,OAAO,CAAC,SAAS;MAC5C;IACF,CAAC,CAAC;IACF,OAAOM,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACdC,OAAO,CAACJ,KAAK,CAAC,YAAY,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACK,OAAO,CAAC;IAClE,MAAM,IAAIC,KAAK,CAAC,EAAAJ,gBAAA,GAAAF,KAAK,CAACH,QAAQ,cAAAK,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBH,IAAI,cAAAI,qBAAA,uBAApBA,qBAAA,CAAsBI,OAAO,KAAIP,KAAK,CAACK,OAAO,CAAC;EACjE;AACF,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMX,QAAQ,GAAG,MAAMjB,GAAG,CAAC6B,GAAG,CAAC,QAAQ,CAAC;EACxC,OAAOZ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMW,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC9C,MAAMb,QAAQ,GAAG,MAAMjB,GAAG,CAAC6B,GAAG,CAAC,qBAAqB,CAAC;EACrD,OAAOZ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMY,kBAAkB,GAAG,MAAOC,YAAY,IAAK;EACxD,MAAMf,QAAQ,GAAG,MAAMjB,GAAG,CAAC6B,GAAG,CAAC,aAAaG,YAAY,EAAE,EAAE;IAC1DC,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,OAAOhB,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}