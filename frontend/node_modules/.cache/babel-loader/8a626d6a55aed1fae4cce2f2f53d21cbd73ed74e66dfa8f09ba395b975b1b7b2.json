{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jordan\\\\file-converter\\\\frontend\\\\src\\\\components\\\\FileConverter.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { Box, Typography, Paper, Button, CircularProgress, LinearProgress } from '@mui/material';\nimport { CloudUpload, InsertDriveFile, ArrowForward } from '@mui/icons-material';\nimport { convertFile } from '../services/api';\nimport Notification from './Notification';\n\n// File Categories and Conversions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILE_CATEGORIES = {\n  document: {\n    name: 'Documents',\n    formats: {\n      'pdf': 'PDF Document',\n      'doc': 'Word Document',\n      'docx': 'Word Document',\n      'txt': 'Text File',\n      'rtf': 'Rich Text Format',\n      'odt': 'OpenDocument Text',\n      'epub': 'E-Book Format',\n      'mobi': 'Kindle Format',\n      'pages': 'Apple Pages'\n    }\n  },\n  spreadsheet: {\n    name: 'Spreadsheets',\n    formats: {\n      'xlsx': 'Excel Workbook',\n      'xls': 'Excel 97-2003',\n      'csv': 'CSV File',\n      'ods': 'OpenDocument Sheet',\n      'numbers': 'Apple Numbers'\n    }\n  },\n  presentation: {\n    name: 'Presentations',\n    formats: {\n      'ppt': 'PowerPoint',\n      'pptx': 'PowerPoint',\n      'odp': 'OpenDocument',\n      'key': 'Keynote'\n    }\n  },\n  image: {\n    name: 'Images',\n    formats: {\n      'jpg': 'JPEG Image',\n      'jpeg': 'JPEG Image',\n      'png': 'PNG Image',\n      'gif': 'GIF Image',\n      'webp': 'WebP Image',\n      'svg': 'SVG Vector',\n      'tiff': 'TIFF Image',\n      'bmp': 'Bitmap Image',\n      'ico': 'Icon File',\n      'heic': 'HEIC Image'\n    }\n  },\n  audio: {\n    name: 'Audio',\n    formats: {\n      'mp3': 'MP3 Audio',\n      'wav': 'WAV Audio',\n      'ogg': 'OGG Audio',\n      'm4a': 'AAC Audio',\n      'flac': 'FLAC Audio',\n      'aac': 'AAC Audio',\n      'wma': 'Windows Media Audio'\n    }\n  },\n  video: {\n    name: 'Video',\n    formats: {\n      'mp4': 'MP4 Video',\n      'avi': 'AVI Video',\n      'mov': 'QuickTime Movie',\n      'wmv': 'Windows Media Video',\n      'mkv': 'Matroska Video',\n      'flv': 'Flash Video',\n      'webm': 'WebM Video'\n    }\n  },\n  '3d': {\n    name: '3D Models',\n    formats: {\n      'stl': 'Stereolithography',\n      'obj': 'Wavefront OBJ',\n      'fbx': 'Filmbox',\n      'dae': 'COLLADA',\n      'blend': 'Blender',\n      'max': '3ds Max'\n    }\n  },\n  archive: {\n    name: 'Archives',\n    formats: {\n      'zip': 'ZIP Archive',\n      'rar': 'RAR Archive',\n      '7z': '7-Zip Archive',\n      'tar': 'TAR Archive',\n      'gz': 'GZIP Archive'\n    }\n  }\n};\n\n// Conversion paths - defines which formats can be converted to which others\nconst CONVERSION_PATHS = {\n  // Document conversions\n  'doc': ['pdf', 'docx', 'txt', 'rtf', 'odt'],\n  'docx': ['pdf', 'doc', 'txt', 'rtf', 'odt'],\n  'pdf': ['doc', 'docx', 'txt', 'epub', 'mobi'],\n  'txt': ['pdf', 'doc', 'docx', 'rtf'],\n  'epub': ['pdf', 'mobi', 'txt'],\n  'mobi': ['pdf', 'epub', 'txt'],\n  // Spreadsheet conversions\n  'xlsx': ['csv', 'xls', 'pdf', 'ods'],\n  'xls': ['xlsx', 'csv', 'pdf', 'ods'],\n  'csv': ['xlsx', 'xls', 'pdf'],\n  // Presentation conversions\n  'ppt': ['pdf', 'pptx'],\n  'pptx': ['pdf', 'ppt'],\n  // Image conversions\n  'jpg': ['png', 'webp', 'gif', 'tiff', 'pdf', 'svg'],\n  'jpeg': ['png', 'webp', 'gif', 'tiff', 'pdf', 'svg'],\n  'png': ['jpg', 'webp', 'gif', 'tiff', 'pdf', 'svg'],\n  'gif': ['jpg', 'png', 'webp'],\n  'webp': ['jpg', 'png', 'gif'],\n  'svg': ['png', 'jpg', 'pdf'],\n  'tiff': ['jpg', 'png', 'pdf'],\n  'heic': ['jpg', 'png', 'pdf'],\n  // Audio conversions\n  'mp3': ['wav', 'ogg', 'm4a', 'flac'],\n  'wav': ['mp3', 'ogg', 'm4a', 'flac'],\n  'ogg': ['mp3', 'wav', 'm4a'],\n  'flac': ['mp3', 'wav', 'ogg'],\n  // Video conversions\n  'mp4': ['avi', 'mov', 'webm', 'mkv'],\n  'avi': ['mp4', 'mov', 'webm'],\n  'mov': ['mp4', 'avi', 'webm'],\n  'webm': ['mp4', 'avi'],\n  // 3D model conversions\n  'stl': ['obj', 'fbx', 'dae'],\n  'obj': ['stl', 'fbx', 'dae'],\n  'fbx': ['obj', 'stl', 'dae'],\n  // Archive conversions\n  'zip': ['7z', 'tar'],\n  'rar': ['zip', '7z'],\n  '7z': ['zip', 'tar']\n};\n\n// Helper function to get file category\nconst getFileCategory = extension => {\n  for (const [category, data] of Object.entries(FILE_CATEGORIES)) {\n    if (Object.keys(data.formats).includes(extension)) {\n      return category;\n    }\n  }\n  return null;\n};\nfunction FileConverter() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileType, setFileType] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n  const [progress, setProgress] = useState(0);\n  const [conversionStatus, setConversionStatus] = useState('');\n  const ws = useRef(null);\n  useEffect(() => {\n    // Connect to WebSocket server\n    ws.current = new WebSocket('ws://localhost:5001');\n    ws.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setProgress(data.percentage);\n      setConversionStatus(data.status);\n    };\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, []);\n  const detectFileType = file => {\n    const extension = file.name.split('.').pop().toLowerCase();\n    return getFileCategory(extension);\n  };\n  const handleFileUpload = event => {\n    try {\n      const uploadedFile = event.target.files[0];\n      if (!uploadedFile) return;\n      const detectedType = detectFileType(uploadedFile);\n      if (!detectedType) {\n        showNotification('Unsupported file type', 'error');\n        return;\n      }\n      setFile(uploadedFile);\n      setFileType(detectedType);\n    } catch (error) {\n      showNotification(error.message, 'error');\n    }\n  };\n  const handleConvert = async targetFormat => {\n    try {\n      setLoading(true);\n      setProgress(0);\n      setConversionStatus('Starting...');\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('sourceType', fileType);\n      formData.append('targetFormat', targetFormat);\n      const response = await convertFile(formData);\n      if (response.conversionId) {\n        // Conversion started successfully\n        showNotification('Conversion in progress...', 'info');\n      }\n    } catch (error) {\n      console.error('Conversion error:', error);\n      showNotification(`Conversion failed: ${error.message || 'Unknown error'}`, 'error');\n      setProgress(0);\n      setConversionStatus('');\n    }\n  };\n  const showNotification = (message, severity) => {\n    setNotification({\n      open: true,\n      message,\n      severity\n    });\n  };\n  const closeNotification = () => {\n    setNotification(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  const getTargetFormats = () => {\n    if (!file || !fileType) return [];\n    const currentFormat = file.name.split('.').pop().toLowerCase();\n    return CONVERSION_PATHS[currentFormat] || [];\n  };\n  const ConversionOptions = ({\n    formats\n  }) => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mb: 2\n        },\n        children: \"Available Conversions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(120px, 1fr))',\n          gap: 2\n        },\n        children: formats.map(format => {\n          var _FILE_CATEGORIES$getF;\n          return /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => handleConvert(format),\n            disabled: loading,\n            sx: {\n              py: 1.5,\n              backgroundColor: 'primary.main',\n              color: 'white',\n              '&:hover': {\n                backgroundColor: 'primary.dark'\n              }\n            },\n            children: ((_FILE_CATEGORIES$getF = FILE_CATEGORIES[getFileCategory(format)]) === null || _FILE_CATEGORIES$getF === void 0 ? void 0 : _FILE_CATEGORIES$getF.formats[format]) || format.toUpperCase()\n          }, format, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: 4,\n      py: 8,\n      px: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        mb: 4,\n        width: '100%',\n        maxWidth: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        component: \"h1\",\n        sx: {\n          mb: 2,\n          fontSize: {\n            xs: '2rem',\n            md: '3rem'\n          },\n          fontWeight: 800\n        },\n        children: \"Convert Any File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        sx: {\n          fontWeight: 400,\n          px: 2\n        },\n        children: \"Fast, secure, and free file conversion. No registration required.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      sx: {\n        width: '100%',\n        maxWidth: 600,\n        border: '1px solid',\n        borderColor: 'divider',\n        borderRadius: 3,\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 4\n        },\n        children: !file ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            border: '2px dashed',\n            borderColor: 'primary.main',\n            borderRadius: 2,\n            p: {\n              xs: 3,\n              sm: 4\n            },\n            textAlign: 'center',\n            cursor: 'pointer',\n            transition: 'all 0.2s ease',\n            minHeight: 200,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            '&:hover': {\n              backgroundColor: 'primary.main',\n              '& .upload-text': {\n                color: 'white'\n              },\n              '& .upload-icon': {\n                color: 'white'\n              }\n            }\n          },\n          component: \"label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            hidden: true,\n            onChange: handleFileUpload,\n            accept: Object.keys(FILE_CATEGORIES).map(ext => `.${ext}`).join(',')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CloudUpload, {\n            className: \"upload-icon\",\n            sx: {\n              fontSize: {\n                xs: 40,\n                sm: 48\n              },\n              color: 'primary.main',\n              mb: 2,\n              transition: 'color 0.2s ease'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: \"upload-text\",\n            variant: \"h6\",\n            color: \"primary\",\n            sx: {\n              mb: 1,\n              transition: 'color 0.2s ease',\n              fontSize: {\n                xs: '1.1rem',\n                sm: '1.25rem'\n              }\n            },\n            children: \"Drop your file here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: \"upload-text\",\n            variant: \"body2\",\n            color: \"text.secondary\",\n            sx: {\n              transition: 'color 0.2s ease'\n            },\n            children: \"or click to browse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 2,\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(InsertDriveFile, {\n              sx: {\n                fontSize: 40,\n                color: 'primary.main'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  fontWeight: 600\n                },\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [(file.size / (1024 * 1024)).toFixed(2), \" MB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ConversionOptions, {\n            formats: getTargetFormats()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mb: 1\n              },\n              children: conversionStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: progress,\n              sx: {\n                height: 8,\n                borderRadius: 4,\n                backgroundColor: 'rgba(25, 118, 210, 0.1)',\n                '& .MuiLinearProgress-bar': {\n                  borderRadius: 4\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 1,\n                textAlign: 'right'\n              },\n              children: [progress, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: () => {\n              setFile(null);\n              setFileType('');\n            },\n            sx: {\n              mt: 3\n            },\n            disabled: loading,\n            children: \"Choose Different File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      open: notification.open,\n      message: notification.message,\n      severity: notification.severity,\n      onClose: closeNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n}\n_s(FileConverter, \"uk4dr/nZXI9V40A0azNWRmN/DvU=\");\n_c = FileConverter;\nexport default FileConverter;\nvar _c;\n$RefreshReg$(_c, \"FileConverter\");","map":{"version":3,"names":["useState","useRef","useEffect","Box","Typography","Paper","Button","CircularProgress","LinearProgress","CloudUpload","InsertDriveFile","ArrowForward","convertFile","Notification","jsxDEV","_jsxDEV","FILE_CATEGORIES","document","name","formats","spreadsheet","presentation","image","audio","video","archive","CONVERSION_PATHS","getFileCategory","extension","category","data","Object","entries","keys","includes","FileConverter","_s","file","setFile","fileType","setFileType","loading","setLoading","notification","setNotification","open","message","severity","progress","setProgress","conversionStatus","setConversionStatus","ws","current","WebSocket","onmessage","event","JSON","parse","percentage","status","close","detectFileType","split","pop","toLowerCase","handleFileUpload","uploadedFile","target","files","detectedType","showNotification","error","handleConvert","targetFormat","formData","FormData","append","response","conversionId","console","closeNotification","prev","getTargetFormats","currentFormat","ConversionOptions","sx","mt","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","map","format","_FILE_CATEGORIES$getF","onClick","disabled","py","backgroundColor","color","toUpperCase","flexDirection","alignItems","px","textAlign","width","maxWidth","component","fontSize","xs","md","fontWeight","elevation","border","borderColor","borderRadius","overflow","p","sm","cursor","transition","minHeight","justifyContent","type","hidden","onChange","accept","ext","join","className","size","toFixed","value","height","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Jordan/file-converter/frontend/src/components/FileConverter.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Paper,\r\n  Button,\r\n  CircularProgress,\r\n  LinearProgress\r\n} from '@mui/material';\r\nimport { \r\n  CloudUpload, \r\n  InsertDriveFile,\r\n  ArrowForward \r\n} from '@mui/icons-material';\r\nimport { convertFile } from '../services/api';\r\nimport Notification from './Notification';\r\n\r\n// File Categories and Conversions\r\nconst FILE_CATEGORIES = {\r\n  document: {\r\n    name: 'Documents',\r\n    formats: {\r\n      'pdf': 'PDF Document',\r\n      'doc': 'Word Document',\r\n      'docx': 'Word Document',\r\n      'txt': 'Text File',\r\n      'rtf': 'Rich Text Format',\r\n      'odt': 'OpenDocument Text',\r\n      'epub': 'E-Book Format',\r\n      'mobi': 'Kindle Format',\r\n      'pages': 'Apple Pages'\r\n    }\r\n  },\r\n  spreadsheet: {\r\n    name: 'Spreadsheets',\r\n    formats: {\r\n      'xlsx': 'Excel Workbook',\r\n      'xls': 'Excel 97-2003',\r\n      'csv': 'CSV File',\r\n      'ods': 'OpenDocument Sheet',\r\n      'numbers': 'Apple Numbers'\r\n    }\r\n  },\r\n  presentation: {\r\n    name: 'Presentations',\r\n    formats: {\r\n      'ppt': 'PowerPoint',\r\n      'pptx': 'PowerPoint',\r\n      'odp': 'OpenDocument',\r\n      'key': 'Keynote'\r\n    }\r\n  },\r\n  image: {\r\n    name: 'Images',\r\n    formats: {\r\n      'jpg': 'JPEG Image',\r\n      'jpeg': 'JPEG Image',\r\n      'png': 'PNG Image',\r\n      'gif': 'GIF Image',\r\n      'webp': 'WebP Image',\r\n      'svg': 'SVG Vector',\r\n      'tiff': 'TIFF Image',\r\n      'bmp': 'Bitmap Image',\r\n      'ico': 'Icon File',\r\n      'heic': 'HEIC Image'\r\n    }\r\n  },\r\n  audio: {\r\n    name: 'Audio',\r\n    formats: {\r\n      'mp3': 'MP3 Audio',\r\n      'wav': 'WAV Audio',\r\n      'ogg': 'OGG Audio',\r\n      'm4a': 'AAC Audio',\r\n      'flac': 'FLAC Audio',\r\n      'aac': 'AAC Audio',\r\n      'wma': 'Windows Media Audio'\r\n    }\r\n  },\r\n  video: {\r\n    name: 'Video',\r\n    formats: {\r\n      'mp4': 'MP4 Video',\r\n      'avi': 'AVI Video',\r\n      'mov': 'QuickTime Movie',\r\n      'wmv': 'Windows Media Video',\r\n      'mkv': 'Matroska Video',\r\n      'flv': 'Flash Video',\r\n      'webm': 'WebM Video'\r\n    }\r\n  },\r\n  '3d': {\r\n    name: '3D Models',\r\n    formats: {\r\n      'stl': 'Stereolithography',\r\n      'obj': 'Wavefront OBJ',\r\n      'fbx': 'Filmbox',\r\n      'dae': 'COLLADA',\r\n      'blend': 'Blender',\r\n      'max': '3ds Max'\r\n    }\r\n  },\r\n  archive: {\r\n    name: 'Archives',\r\n    formats: {\r\n      'zip': 'ZIP Archive',\r\n      'rar': 'RAR Archive',\r\n      '7z': '7-Zip Archive',\r\n      'tar': 'TAR Archive',\r\n      'gz': 'GZIP Archive'\r\n    }\r\n  }\r\n};\r\n\r\n// Conversion paths - defines which formats can be converted to which others\r\nconst CONVERSION_PATHS = {\r\n  // Document conversions\r\n  'doc': ['pdf', 'docx', 'txt', 'rtf', 'odt'],\r\n  'docx': ['pdf', 'doc', 'txt', 'rtf', 'odt'],\r\n  'pdf': ['doc', 'docx', 'txt', 'epub', 'mobi'],\r\n  'txt': ['pdf', 'doc', 'docx', 'rtf'],\r\n  'epub': ['pdf', 'mobi', 'txt'],\r\n  'mobi': ['pdf', 'epub', 'txt'],\r\n  \r\n  // Spreadsheet conversions\r\n  'xlsx': ['csv', 'xls', 'pdf', 'ods'],\r\n  'xls': ['xlsx', 'csv', 'pdf', 'ods'],\r\n  'csv': ['xlsx', 'xls', 'pdf'],\r\n  \r\n  // Presentation conversions\r\n  'ppt': ['pdf', 'pptx'],\r\n  'pptx': ['pdf', 'ppt'],\r\n  \r\n  // Image conversions\r\n  'jpg': ['png', 'webp', 'gif', 'tiff', 'pdf', 'svg'],\r\n  'jpeg': ['png', 'webp', 'gif', 'tiff', 'pdf', 'svg'],\r\n  'png': ['jpg', 'webp', 'gif', 'tiff', 'pdf', 'svg'],\r\n  'gif': ['jpg', 'png', 'webp'],\r\n  'webp': ['jpg', 'png', 'gif'],\r\n  'svg': ['png', 'jpg', 'pdf'],\r\n  'tiff': ['jpg', 'png', 'pdf'],\r\n  'heic': ['jpg', 'png', 'pdf'],\r\n  \r\n  // Audio conversions\r\n  'mp3': ['wav', 'ogg', 'm4a', 'flac'],\r\n  'wav': ['mp3', 'ogg', 'm4a', 'flac'],\r\n  'ogg': ['mp3', 'wav', 'm4a'],\r\n  'flac': ['mp3', 'wav', 'ogg'],\r\n  \r\n  // Video conversions\r\n  'mp4': ['avi', 'mov', 'webm', 'mkv'],\r\n  'avi': ['mp4', 'mov', 'webm'],\r\n  'mov': ['mp4', 'avi', 'webm'],\r\n  'webm': ['mp4', 'avi'],\r\n  \r\n  // 3D model conversions\r\n  'stl': ['obj', 'fbx', 'dae'],\r\n  'obj': ['stl', 'fbx', 'dae'],\r\n  'fbx': ['obj', 'stl', 'dae'],\r\n  \r\n  // Archive conversions\r\n  'zip': ['7z', 'tar'],\r\n  'rar': ['zip', '7z'],\r\n  '7z': ['zip', 'tar']\r\n};\r\n\r\n// Helper function to get file category\r\nconst getFileCategory = (extension) => {\r\n  for (const [category, data] of Object.entries(FILE_CATEGORIES)) {\r\n    if (Object.keys(data.formats).includes(extension)) {\r\n      return category;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nfunction FileConverter() {\r\n  const [file, setFile] = useState(null);\r\n  const [fileType, setFileType] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [notification, setNotification] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: 'info'\r\n  });\r\n  const [progress, setProgress] = useState(0);\r\n  const [conversionStatus, setConversionStatus] = useState('');\r\n  const ws = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Connect to WebSocket server\r\n    ws.current = new WebSocket('ws://localhost:5001');\r\n\r\n    ws.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      setProgress(data.percentage);\r\n      setConversionStatus(data.status);\r\n    };\r\n\r\n    return () => {\r\n      if (ws.current) {\r\n        ws.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const detectFileType = (file) => {\r\n    const extension = file.name.split('.').pop().toLowerCase();\r\n    return getFileCategory(extension);\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    try {\r\n      const uploadedFile = event.target.files[0];\r\n      if (!uploadedFile) return;\r\n\r\n      const detectedType = detectFileType(uploadedFile);\r\n      if (!detectedType) {\r\n        showNotification('Unsupported file type', 'error');\r\n        return;\r\n      }\r\n\r\n      setFile(uploadedFile);\r\n      setFileType(detectedType);\r\n    } catch (error) {\r\n      showNotification(error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const handleConvert = async (targetFormat) => {\r\n    try {\r\n      setLoading(true);\r\n      setProgress(0);\r\n      setConversionStatus('Starting...');\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      formData.append('sourceType', fileType);\r\n      formData.append('targetFormat', targetFormat);\r\n\r\n      const response = await convertFile(formData);\r\n\r\n      if (response.conversionId) {\r\n        // Conversion started successfully\r\n        showNotification('Conversion in progress...', 'info');\r\n      }\r\n    } catch (error) {\r\n      console.error('Conversion error:', error);\r\n      showNotification(\r\n        `Conversion failed: ${error.message || 'Unknown error'}`,\r\n        'error'\r\n      );\r\n      setProgress(0);\r\n      setConversionStatus('');\r\n    }\r\n  };\r\n\r\n  const showNotification = (message, severity) => {\r\n    setNotification({\r\n      open: true,\r\n      message,\r\n      severity\r\n    });\r\n  };\r\n\r\n  const closeNotification = () => {\r\n    setNotification(prev => ({ ...prev, open: false }));\r\n  };\r\n\r\n  const getTargetFormats = () => {\r\n    if (!file || !fileType) return [];\r\n    const currentFormat = file.name.split('.').pop().toLowerCase();\r\n    return CONVERSION_PATHS[currentFormat] || [];\r\n  };\r\n\r\n  const ConversionOptions = ({ formats }) => {\r\n    return (\r\n      <Box sx={{ mt: 3 }}>\r\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n          Available Conversions\r\n        </Typography>\r\n        <Box sx={{ \r\n          display: 'grid', \r\n          gridTemplateColumns: 'repeat(auto-fill, minmax(120px, 1fr))', \r\n          gap: 2 \r\n        }}>\r\n          {formats.map((format) => (\r\n            <Button\r\n              key={format}\r\n              variant=\"contained\"\r\n              onClick={() => handleConvert(format)}\r\n              disabled={loading}\r\n              sx={{\r\n                py: 1.5,\r\n                backgroundColor: 'primary.main',\r\n                color: 'white',\r\n                '&:hover': {\r\n                  backgroundColor: 'primary.dark',\r\n                },\r\n              }}\r\n            >\r\n              {FILE_CATEGORIES[getFileCategory(format)]?.formats[format] || format.toUpperCase()}\r\n            </Button>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      flexDirection: 'column', \r\n      alignItems: 'center', \r\n      gap: 4, \r\n      py: 8,\r\n      px: 2,\r\n    }}>\r\n      <Box sx={{ \r\n        textAlign: 'center', \r\n        mb: 4,\r\n        width: '100%',\r\n        maxWidth: 600 \r\n      }}>\r\n        <Typography \r\n          variant=\"h2\" \r\n          component=\"h1\" \r\n          sx={{ \r\n            mb: 2, \r\n            fontSize: { xs: '2rem', md: '3rem' }, \r\n            fontWeight: 800 \r\n          }}\r\n        >\r\n          Convert Any File\r\n        </Typography>\r\n        <Typography \r\n          variant=\"h6\" \r\n          color=\"text.secondary\" \r\n          sx={{ \r\n            fontWeight: 400,\r\n            px: 2\r\n          }}\r\n        >\r\n          Fast, secure, and free file conversion. No registration required.\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Paper \r\n        elevation={0} \r\n        sx={{ \r\n          width: '100%',\r\n          maxWidth: 600,\r\n          border: '1px solid',\r\n          borderColor: 'divider',\r\n          borderRadius: 3,\r\n          overflow: 'hidden'\r\n        }}\r\n      >\r\n        <Box sx={{ p: 4 }}>\r\n          {!file ? (\r\n            <Box\r\n              sx={{\r\n                border: '2px dashed',\r\n                borderColor: 'primary.main',\r\n                borderRadius: 2,\r\n                p: { xs: 3, sm: 4 },\r\n                textAlign: 'center',\r\n                cursor: 'pointer',\r\n                transition: 'all 0.2s ease',\r\n                minHeight: 200,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                '&:hover': {\r\n                  backgroundColor: 'primary.main',\r\n                  '& .upload-text': { color: 'white' },\r\n                  '& .upload-icon': { color: 'white' },\r\n                },\r\n              }}\r\n              component=\"label\"\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                hidden\r\n                onChange={handleFileUpload}\r\n                accept={Object.keys(FILE_CATEGORIES).map(ext => `.${ext}`).join(',')}\r\n              />\r\n              <CloudUpload \r\n                className=\"upload-icon\" \r\n                sx={{ \r\n                  fontSize: { xs: 40, sm: 48 },\r\n                  color: 'primary.main',\r\n                  mb: 2,\r\n                  transition: 'color 0.2s ease'\r\n                }} \r\n              />\r\n              <Typography \r\n                className=\"upload-text\" \r\n                variant=\"h6\" \r\n                color=\"primary\" \r\n                sx={{ \r\n                  mb: 1,\r\n                  transition: 'color 0.2s ease',\r\n                  fontSize: { xs: '1.1rem', sm: '1.25rem' }\r\n                }}\r\n              >\r\n                Drop your file here\r\n              </Typography>\r\n              <Typography \r\n                className=\"upload-text\" \r\n                variant=\"body2\" \r\n                color=\"text.secondary\"\r\n                sx={{ transition: 'color 0.2s ease' }}\r\n              >\r\n                or click to browse\r\n              </Typography>\r\n            </Box>\r\n          ) : (\r\n            <Box sx={{ width: '100%' }}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 4 }}>\r\n                <InsertDriveFile sx={{ fontSize: 40, color: 'primary.main' }} />\r\n                <Box>\r\n                  <Typography variant=\"subtitle1\" sx={{ fontWeight: 600 }}>\r\n                    {file.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {(file.size / (1024 * 1024)).toFixed(2)} MB\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              <ConversionOptions formats={getTargetFormats()} />\r\n\r\n              {loading && (\r\n                <Box sx={{ mt: 3 }}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                    {conversionStatus}\r\n                  </Typography>\r\n                  <LinearProgress \r\n                    variant=\"determinate\" \r\n                    value={progress} \r\n                    sx={{ \r\n                      height: 8,\r\n                      borderRadius: 4,\r\n                      backgroundColor: 'rgba(25, 118, 210, 0.1)',\r\n                      '& .MuiLinearProgress-bar': {\r\n                        borderRadius: 4,\r\n                      }\r\n                    }}\r\n                  />\r\n                  <Typography \r\n                    variant=\"body2\" \r\n                    color=\"text.secondary\" \r\n                    sx={{ mt: 1, textAlign: 'right' }}\r\n                  >\r\n                    {progress}%\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  setFile(null);\r\n                  setFileType('');\r\n                }}\r\n                sx={{ mt: 3 }}\r\n                disabled={loading}\r\n              >\r\n                Choose Different File\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Paper>\r\n\r\n      <Notification\r\n        open={notification.open}\r\n        message={notification.message}\r\n        severity={notification.severity}\r\n        onClose={closeNotification}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FileConverter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}