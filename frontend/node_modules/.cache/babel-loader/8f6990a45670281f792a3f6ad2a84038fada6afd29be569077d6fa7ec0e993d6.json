{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Add interceptor to include user/guest ID\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  const guestId = localStorage.getItem('guestId');\n  if (user) {\n    config.headers['user-id'] = user.id;\n  } else if (guestId) {\n    config.headers['guest-id'] = guestId;\n  }\n  return config;\n});\nexport const convertFile = async (file, sourceType, targetFormat) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('sourceType', sourceType);\n  formData.append('targetFormat', targetFormat);\n  const response = await api.post('/convert', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data;\n};\nexport const getStats = async () => {\n  const response = await api.get('/stats');\n  return response.data;\n};\nexport const getRecentConversions = async () => {\n  const response = await api.get('/recent-conversions');\n  return response.data;\n};\nexport const downloadConversion = async conversionId => {\n  const response = await api.get(`/download/${conversionId}`, {\n    responseType: 'blob'\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","guestId","headers","id","convertFile","file","sourceType","targetFormat","formData","FormData","append","response","post","data","getStats","get","getRecentConversions","downloadConversion","conversionId","responseType"],"sources":["C:/Users/Jordan/file-converter/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL\r\n});\r\n\r\n// Add interceptor to include user/guest ID\r\napi.interceptors.request.use((config) => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const guestId = localStorage.getItem('guestId');\r\n\r\n  if (user) {\r\n    config.headers['user-id'] = user.id;\r\n  } else if (guestId) {\r\n    config.headers['guest-id'] = guestId;\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\nexport const convertFile = async (file, sourceType, targetFormat) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  formData.append('sourceType', sourceType);\r\n  formData.append('targetFormat', targetFormat);\r\n\r\n  const response = await api.post('/convert', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const getStats = async () => {\r\n  const response = await api.get('/stats');\r\n  return response.data;\r\n};\r\n\r\nexport const getRecentConversions = async () => {\r\n  const response = await api.get('/recent-conversions');\r\n  return response.data;\r\n};\r\n\r\nexport const downloadConversion = async (conversionId) => {\r\n  const response = await api.get(`/download/${conversionId}`, {\r\n    responseType: 'blob'\r\n  });\r\n  return response.data;\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;;AAEF;AACAC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,MAAMC,OAAO,GAAGF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAE/C,IAAIJ,IAAI,EAAE;IACRD,MAAM,CAACO,OAAO,CAAC,SAAS,CAAC,GAAGN,IAAI,CAACO,EAAE;EACrC,CAAC,MAAM,IAAIF,OAAO,EAAE;IAClBN,MAAM,CAACO,OAAO,CAAC,UAAU,CAAC,GAAGD,OAAO;EACtC;EAEA,OAAON,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMS,WAAW,GAAG,MAAAA,CAAOC,IAAI,EAAEC,UAAU,EAAEC,YAAY,KAAK;EACnE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;EAC7BG,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEJ,UAAU,CAAC;EACzCE,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEH,YAAY,CAAC;EAE7C,MAAMI,QAAQ,GAAG,MAAMtB,GAAG,CAACuB,IAAI,CAAC,UAAU,EAAEJ,QAAQ,EAAE;IACpDN,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,OAAOS,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMH,QAAQ,GAAG,MAAMtB,GAAG,CAAC0B,GAAG,CAAC,QAAQ,CAAC;EACxC,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMG,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC9C,MAAML,QAAQ,GAAG,MAAMtB,GAAG,CAAC0B,GAAG,CAAC,qBAAqB,CAAC;EACrD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMI,kBAAkB,GAAG,MAAOC,YAAY,IAAK;EACxD,MAAMP,QAAQ,GAAG,MAAMtB,GAAG,CAAC0B,GAAG,CAAC,aAAaG,YAAY,EAAE,EAAE;IAC1DC,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,OAAOR,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}