{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Add interceptor to include user/guest ID\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  const guestId = localStorage.getItem('guestId');\n  if (user) {\n    config.headers['user-id'] = user.id;\n  } else if (guestId) {\n    config.headers['guest-id'] = guestId;\n  }\n  return config;\n});\nexport const convertFile = async (formData, onProgress) => {\n  try {\n    const response = await axios.post(`${API_URL}/convert`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'guest-id': localStorage.getItem('guestId')\n      },\n      responseType: 'blob',\n      onUploadProgress: onProgress\n    });\n    const contentDisposition = response.headers['content-disposition'];\n    const contentType = response.headers['content-type'];\n    let fileName = 'converted-file';\n    if (contentDisposition) {\n      const matches = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/.exec(contentDisposition);\n      if (matches != null && matches[1]) {\n        fileName = matches[1].replace(/['\"]/g, '');\n      }\n    }\n    const blob = new Blob([response.data], {\n      type: contentType\n    });\n    const downloadUrl = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = downloadUrl;\n    link.setAttribute('download', fileName);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(downloadUrl);\n    return {\n      success: true\n    };\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data;\n    console.error('API Error:', error);\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) instanceof Blob) {\n      const text = await error.response.data.text();\n      try {\n        const errorData = JSON.parse(text);\n        throw new Error(errorData.details || 'Conversion failed');\n      } catch (e) {\n        throw new Error('Conversion failed');\n      }\n    }\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.details) || error.message);\n  }\n};\nexport const getStats = async () => {\n  const response = await api.get('/stats');\n  return response.data;\n};\nexport const getRecentConversions = async () => {\n  const response = await api.get('/recent-conversions');\n  return response.data;\n};\nexport const downloadConversion = async conversionId => {\n  const response = await api.get(`/download/${conversionId}`, {\n    responseType: 'blob'\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","guestId","headers","id","convertFile","formData","onProgress","response","post","responseType","onUploadProgress","contentDisposition","contentType","fileName","matches","exec","replace","blob","Blob","data","type","downloadUrl","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","success","error","_error$response","_error$response2","_error$response2$data","console","text","errorData","Error","details","e","message","getStats","get","getRecentConversions","downloadConversion","conversionId"],"sources":["C:/Users/Jordan/file-converter/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL\r\n});\r\n\r\n// Add interceptor to include user/guest ID\r\napi.interceptors.request.use((config) => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const guestId = localStorage.getItem('guestId');\r\n\r\n  if (user) {\r\n    config.headers['user-id'] = user.id;\r\n  } else if (guestId) {\r\n    config.headers['guest-id'] = guestId;\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\nexport const convertFile = async (formData, onProgress) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/convert`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        'guest-id': localStorage.getItem('guestId')\r\n      },\r\n      responseType: 'blob',\r\n      onUploadProgress: onProgress\r\n    });\r\n\r\n    const contentDisposition = response.headers['content-disposition'];\r\n    const contentType = response.headers['content-type'];\r\n    \r\n    let fileName = 'converted-file';\r\n    if (contentDisposition) {\r\n      const matches = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/.exec(contentDisposition);\r\n      if (matches != null && matches[1]) {\r\n        fileName = matches[1].replace(/['\"]/g, '');\r\n      }\r\n    }\r\n\r\n    const blob = new Blob([response.data], { type: contentType });\r\n    \r\n    const downloadUrl = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = downloadUrl;\r\n    link.setAttribute('download', fileName);\r\n    \r\n    document.body.appendChild(link);\r\n    link.click();\r\n    \r\n    document.body.removeChild(link);\r\n    window.URL.revokeObjectURL(downloadUrl);\r\n\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error('API Error:', error);\r\n    if (error.response?.data instanceof Blob) {\r\n      const text = await error.response.data.text();\r\n      try {\r\n        const errorData = JSON.parse(text);\r\n        throw new Error(errorData.details || 'Conversion failed');\r\n      } catch (e) {\r\n        throw new Error('Conversion failed');\r\n      }\r\n    }\r\n    throw new Error(error.response?.data?.details || error.message);\r\n  }\r\n};\r\n\r\nexport const getStats = async () => {\r\n  const response = await api.get('/stats');\r\n  return response.data;\r\n};\r\n\r\nexport const getRecentConversions = async () => {\r\n  const response = await api.get('/recent-conversions');\r\n  return response.data;\r\n};\r\n\r\nexport const downloadConversion = async (conversionId) => {\r\n  const response = await api.get(`/download/${conversionId}`, {\r\n    responseType: 'blob'\r\n  });\r\n  return response.data;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}