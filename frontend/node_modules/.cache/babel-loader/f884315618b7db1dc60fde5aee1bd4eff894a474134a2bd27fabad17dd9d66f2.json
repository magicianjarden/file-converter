{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Add interceptor to include user/guest ID\napi.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  const guestId = localStorage.getItem('guestId');\n  if (user) {\n    config.headers['user-id'] = user.id;\n  } else if (guestId) {\n    config.headers['guest-id'] = guestId;\n  }\n  return config;\n});\nexport const convertFile = async (formData, onProgress) => {\n  try {\n    const response = await axios.post(`${API_URL}/convert`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'guest-id': localStorage.getItem('guestId')\n      },\n      responseType: 'blob',\n      onUploadProgress: onProgress\n    });\n    const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = downloadUrl;\n    const contentDisposition = response.headers['content-disposition'];\n    const fileName = contentDisposition ? contentDisposition.split('filename=')[1].replace(/['\"]/g, '') : 'converted-file';\n    link.setAttribute('download', fileName);\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n    window.URL.revokeObjectURL(downloadUrl);\n    return {\n      success: true\n    };\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data;\n    console.error('API Error:', error);\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) instanceof Blob) {\n      const text = await error.response.data.text();\n      const errorData = JSON.parse(text);\n      throw new Error(errorData.details || 'Conversion failed');\n    }\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.details) || error.message);\n  }\n};\nexport const getStats = async () => {\n  const response = await api.get('/stats');\n  return response.data;\n};\nexport const getRecentConversions = async () => {\n  const response = await api.get('/recent-conversions');\n  return response.data;\n};\nexport const downloadConversion = async conversionId => {\n  const response = await api.get(`/download/${conversionId}`, {\n    responseType: 'blob'\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","guestId","headers","id","convertFile","formData","onProgress","response","post","responseType","onUploadProgress","downloadUrl","window","URL","createObjectURL","Blob","data","link","document","createElement","href","contentDisposition","fileName","split","replace","setAttribute","body","appendChild","click","remove","revokeObjectURL","success","error","_error$response","_error$response2","_error$response2$data","console","text","errorData","Error","details","message","getStats","get","getRecentConversions","downloadConversion","conversionId"],"sources":["C:/Users/Jordan/file-converter/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL\r\n});\r\n\r\n// Add interceptor to include user/guest ID\r\napi.interceptors.request.use((config) => {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const guestId = localStorage.getItem('guestId');\r\n\r\n  if (user) {\r\n    config.headers['user-id'] = user.id;\r\n  } else if (guestId) {\r\n    config.headers['guest-id'] = guestId;\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\nexport const convertFile = async (formData, onProgress) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/convert`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        'guest-id': localStorage.getItem('guestId')\r\n      },\r\n      responseType: 'blob',\r\n      onUploadProgress: onProgress\r\n    });\r\n\r\n    const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\r\n    const link = document.createElement('a');\r\n    link.href = downloadUrl;\r\n    \r\n    const contentDisposition = response.headers['content-disposition'];\r\n    const fileName = contentDisposition\r\n      ? contentDisposition.split('filename=')[1].replace(/['\"]/g, '')\r\n      : 'converted-file';\r\n    \r\n    link.setAttribute('download', fileName);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n    window.URL.revokeObjectURL(downloadUrl);\r\n\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error('API Error:', error);\r\n    if (error.response?.data instanceof Blob) {\r\n      const text = await error.response.data.text();\r\n      const errorData = JSON.parse(text);\r\n      throw new Error(errorData.details || 'Conversion failed');\r\n    }\r\n    throw new Error(error.response?.data?.details || error.message);\r\n  }\r\n};\r\n\r\nexport const getStats = async () => {\r\n  const response = await api.get('/stats');\r\n  return response.data;\r\n};\r\n\r\nexport const getRecentConversions = async () => {\r\n  const response = await api.get('/recent-conversions');\r\n  return response.data;\r\n};\r\n\r\nexport const downloadConversion = async (conversionId) => {\r\n  const response = await api.get(`/download/${conversionId}`, {\r\n    responseType: 'blob'\r\n  });\r\n  return response.data;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}